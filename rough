roughcode



import React, { useState, useEffect } from 'react';
import data1 from './data1.json'; // Import JSON file
import data2 from './data2.json'; // Import another JSON file

const DataDisplayComponent = () => {
  const [selectedData, setSelectedData] = useState([]);
  const [selectedOption, setSelectedOption] = useState('data1'); // Default selection

  const fetchData = (file) => {
    const selectedJsonData = {
      data1,
      data2,
      // Add more imports as needed
    };

    setSelectedData(selectedJsonData[file]);
  };

  useEffect(() => {
    fetchData(selectedOption);
  }, [selectedOption]);

  const handleSelectChange = (e) => {
    setSelectedOption(e.target.value);
  };

  return (
    <div>
      <select value={selectedOption} onChange={handleSelectChange}>
        <option value="data1">Data Set 1</option>
        <option value="data2">Data Set 2</option>
        {/* Add more options as needed */}
      </select>

      {selectedData.map((item, index) => (
        <div key={index}>
          <p>Index: {index}</p>
          <p>Question: {item.question}</p>
          <p>Answer: {item.answer}</p>
          <p>Keywords: {item.Keyword.join(', ')}</p>
        </div>
      ))}
    </div>
  );
};

export default DataDisplayComponent;



const fetchData = async () => {
    try {
      const response = await fetch('https://jsonplaceholder.typicode.com/posts');
      const fetchedData = await response.json();
      setSelectedData(fetchedData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };


const handleEdit = (index) => {
    // Implement edit functionality here
    console.log(`Editing item at index ${index}`);
  };

  const handleDelete = (index) => {
    // Implement delete functionality here
    console.log(`Deleting item at index ${index}`);
  };






import React, { useState, useEffect } from 'react';
import Calico from "../assest/Calico.json"
import DataTree from "../assest/DataTree.json"
import LND from "../assest/LND.json"

function AdminPage() {
  const [selectedData, setSelectedData] = useState([]);
  const [selectedOption, setSelectedOption] = useState('Calico'); // Default selection

  const fetchData = (file) => {
    const selectedJsonData = {
     Calico,DataTree,LND,
      // Add more imports as needed
    };

    setSelectedData(selectedJsonData[file]);
  };

  useEffect(() => {
    fetchData(selectedOption);
  }, [selectedOption]);

  const handleSelectChange = (e) => {
    setSelectedOption(e.target.value);
  };

  return (
    <div>
      <br/>
      <span>Select Vendor : </span>
      <select className='btn btn-outline-dark' value={selectedOption} onChange={handleSelectChange}>
        <option value="Calico">Calico</option>
        <option value="DataTree">DataTree</option>
        <option value="LND">LND</option>
        {/* Add more options as needed */}
      </select>
      <br/>
    <table className='table table-striped'>
      <thead>
        <tr>
          <th>Index</th>
          <th>Question</th>
          <th >Answer</th>
          <th>Keywords</th>
        </tr>
      </thead>

    <tbody>
    

      {selectedData.map((item, index) => (
        <tr key={index}>
          <td>{index}</td>
          <td> {item.question}</td>
          <td>{item.answer}</td>
          <td>{item.keyword.join(', ')}</td>
        </tr>
      ))}
      </tbody>
      </table>
    </div>
  );
}
 
export default AdminPage;
 


const [selectedData, setSelectedData] = useState([]);
  const [selectedOption, setSelectedOption] = useState('Calico'); // Default selection

  const fetchData = (file) => {
    const selectedJsonData = {
      Calico,
      DataTree,
      LND,
      // Add more imports as needed
    };

    setSelectedData(selectedJsonData[file]);
  };

  useEffect(() => {
    fetchData(selectedOption);
  }, [selectedOption]);

  const handleSelectChange = (e) => {
    setSelectedOption(e.target.value);
  };

  const handleEdit = (index) => {
    // Implement edit functionality here
    console.log(`Editing item at index ${index}`);
  };

  const handleDelete = (index) => {
    // Implement delete functionality here
    console.log(`Deleting item at index ${index}`);
  };

  return (
    <div>
      <br />
      <span>Select Vendor : </span>
      <select className='btn btn-outline-dark' value={selectedOption} onChange={handleSelectChange}>
        <option value="Calico">Calico</option>
        <option value="DataTree">DataTree</option>
        <option value="LND">LND</option>
        {/* Add more options as needed */}
      </select>
      <br />
      <table className='table table-striped'>
        <thead>
          <tr>
            <th>Index</th>
            <th>Question</th>
            <th>Answer</th>
            <th>Keywords</th>
            <th>Action</th>
          </tr>
        </thead>

        <tbody>
          {selectedData.map((item, index) => (
            <tr key={index}>
              <td>{index}</td>
              <td>{item.question}</td>
              <td>{item.answer}</td>
              <td>{item.keyword.join(', ')}</td>
              <td>
                <button className="btn btn-primary" onClick={() => handleEdit(index)}>
                  Edit
                </button>
                <button className="btn btn-danger ms-2" onClick={() => handleDelete(index)}>
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );



---------------------------------



import React, { useState, useEffect } from 'react';
import Calico from "../assest/Calico.json"
import DataTree from "../assest/DataTree.json"
import LND from "../assest/LND.json"

function AdminPage() {
  const [selectedData, setSelectedData] = useState([]);
  const [selectedOption, setSelectedOption] = useState('Calico'); // Default selection

  const fetchData = (file) => {
    const selectedJsonData = {
      Calico,
      DataTree,
      LND,
      // Add more imports as needed
    };

    setSelectedData(selectedJsonData[file]);
  };

  useEffect(() => {
    fetchData(selectedOption);
  }, [selectedOption]);

  const handleSelectChange = (e) => {
    setSelectedOption(e.target.value);
  };

  const handleEdit = (index) => {
    // Implement edit functionality here
    console.log(`Editing item at index ${index}`);
  };

  const handleDelete = (index) => {
    // Implement delete functionality here
    console.log(`Deleting item at index ${index}`);
  };

  return (
    <div>
      <br />
      <span>Select Vendor : </span>
      <select className='btn btn-outline-dark' value={selectedOption} onChange={handleSelectChange}>
        <option value="Calico">Calico</option>
        <option value="DataTree">DataTree</option>
        <option value="LND">LND</option>
        {/* Add more options as needed */}
      </select>
      <br />
      <table className='table table-striped'>
        <thead>
          <tr>
            <th>Index</th>
            <th>Question</th>
            <th>Answer</th>
            <th>Keywords</th>
            <th>Action</th>
          </tr>
        </thead>

        <tbody>
          {selectedData.map((item, index) => (
            <tr key={index}>
              <td>{index}</td>
              <td>{item.question}</td>
              <td>{item.answer}</td>
              <td>{item.keyword.join(', ')}</td>
              <td>
                <button className="btn btn-primary" onClick={() => handleEdit(index)}>
                  Edit
                </button>
                </td>
                <td>
                <button className="btn btn-danger ms-2" onClick={() => handleDelete(index)}>
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
 
export default AdminPage;
 
