public RealEstateInformation getRealEstateInformationObject(String ownerName,String mailingAddress, String address, String propertyClass, String livingUnits, String zoning, String neighborhood, String document1, String document2, String tract, String tractDescription, String acres, String marketAcres, String taxUnit, String function, String activity, String ownership, String site, String topography, String utilities, String access, String fronting, String location, String parkingType, String parkingQuantity, String parkingProximity, String parkingCovered, String parkingUncovered, String taxYear, String land, String building, String total)
	{
		RealEstateInformation realEstateInformation = new RealEstateInformation();
		OwnerInformation ownerInformation = new OwnerInformation();
		ownerInformation.setOwnerName(ownerName);
		ownerInformation.setMailingAddress(mailingAddress);
		
		PropertyAddress propertyAddress = new PropertyAddress();
		propertyAddress.setAddress(address);
		
		GeneralPropertyInformation genralPropertyInformation = new GeneralPropertyInformation();
		genralPropertyInformation.setPropertyClass(propertyClass);
		genralPropertyInformation.setLivingUnits(livingUnits);
		genralPropertyInformation.setZoning(zoning);
		genralPropertyInformation.setNeighborhood(neighborhood);
		genralPropertyInformation.setTaxUnit(taxUnit);
		
		DeedInformation deedInformation =new DeedInformation();
		deedInformation.setDocument1(document1);
		deedInformation.setDocument2(document2);
		
		
		TractInformation tractInformation = new TractInformation();
		tractInformation.setNeighborhood(neighborhood);
		tractInformation.setTract(tract);
		tractInformation.setAcres(acres);
		tractInformation.setMarketAcres(marketAcres);
		
		LanBasedClassificationSystem lanBasedClassificationSystem = new LanBasedClassificationSystem();
		lanBasedClassificationSystem.setFunction(function);
		lanBasedClassificationSystem.setActivity(activity);
		lanBasedClassificationSystem.setOwnerShip(ownership);
		lanBasedClassificationSystem.setSite(site);
		
		PropertyFactors propertyFactors = new PropertyFactors();
		propertyFactors.setTopography(topography);
		propertyFactors.setUtilities(utilities);
		propertyFactors.setAccess(access);
		propertyFactors.setFronting(fronting);
		propertyFactors.setLocation(location);
		propertyFactors.setParkingTypes(parkingType);
		propertyFactors.setParkingQuantity(parkingQuantity);
		propertyFactors.setParkingproximity(parkingProximity);
		propertyFactors.setParkingcovered(parkingCovered);
		propertyFactors.setParkingUncovered(parkingUncovered);
		
		AppraisedValues appraisedValues = new AppraisedValues();
		appraisedValues.setTaxYear(taxYear);
		appraisedValues.setPropertyClass(propertyClass);
		appraisedValues.setLand(land);
		appraisedValues.setBuilding(building);
		appraisedValues.setTotal(total);
				
		
		
		
		realEstateInformation.setOwnerInformation(ownerInformation);
		realEstateInformation.setPropertyAddress(propertyAddress);
		realEstateInformation.setGenralPropertyInformation(genralPropertyInformation);
		realEstateInformation.setDeedInformation(deedInformation);
		realEstateInformation.setTractInformation(tractInformation);
		realEstateInformation.setLandBasedClassificationSystem(lanBasedClassificationSystem);
		realEstateInformation.setPropertyFactors(propertyFactors);
		realEstateInformation.setAppraisedValues(appraisedValues);
		
		
		System.out.println("RealEstateInfo:"+realEstateInformation.getOwnerInformation());
		System.out.println(realEstateInformation.getPropertyAddress());
		System.out.println(realEstateInformation.getGeneralPropertyInformation());
		System.out.println(realEstateInformation.getDeedInformation());
		System.out.println(realEstateInformation.getTractInformation());
		System.out.println(	realEstateInformation.getLandBasedClassificationSystem());
		System.out.println(realEstateInformation.getPropertyFactors());
		System.out.println(realEstateInformation.getAppraisedValues());
		return realEstateInformation; 
	}
